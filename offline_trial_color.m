% trial_color.m% function colortype = trial_color(trial, param1_str, param2_str, gvals, gpars)% get color status (numeric) of specified trial based on colorize parameters% default colortype = 1 (all traces same; determined by master colorlist in update function)% input note: param 2 can never be set if param 1 == 'none'.% JBB 2/4/04function colortype = trial_color(trial, param1_str, param2_str, gvals, gpars)%global gvals gpars% get index number for first parameterif strcmp(param1_str, 'none'),	colortype = 1;											% no color	return													% END FUNCTIONelseif strcmp(param1_str(end-6:end), '.active'),	eval(['p_idx1 = gvals(trial).' param1_str '+ 1;']);					% special case: group by stim / unstimelseif strcmp(param1_str(end-7:end), '.correct'),	eval(['p_idx1 = gvals(trial).' param1_str '+ 2;']);					% special case: group by correct / incorrect	else	p_loc1 = strmatch(param1_str, gpars.namelist, 'exact');	% parameter location in master list	p_idx1 = gvals(trial).index(p_loc1);					% parameter value index for trialend% get index number for second parameter (note: similar code)if strcmp(param2_str, 'none'),	p_idx2 = 1;												% no color	p_len2 = 1;elseif strcmp(param2_str(end-6:end), '.active'),	eval(['p_idx2 = gvals(trial).' param2_str '+ 1;']);					% special case: group by stim / unstim	p_len2 = 2;elseif strcmp(param2_str(end-7:end), '.correct'),	eval(['p_idx2 = gvals(trial).' param2_str '+ 2;']);					% special case: group by correct / incorrect	p_len2 = 3;	else	p_loc2 = strmatch(param2_str, gpars.namelist, 'exact');	% parameter location in master list	p_len2 = gpars.length(p_loc2);							% total number of parameter values	p_idx2 = gvals(trial).index(p_loc2);					% parameter value index for trialend% convert indices for both parameters into single value for color indexingcolortype = p_len2 * (p_idx1-1) + (p_idx2-1) + 1;%%%%fprintf('color = %d:     idx1 = %d   len2 = %d   idx2 = %d\n', colortype, p_idx1, p_len2, p_idx2);