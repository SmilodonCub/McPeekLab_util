function [timestamp, type, channel, unit] = plex_get_token(fid, header)% function [timestamp, type, channel, unit] = plex_get_token(fid, header)%% Gets next timestamped token from the file.%% INPUT: %	fid -- file to search%	header: this is previously read from the file.%% OUTPUT:%	timestamp -- time of occurrence of event or -1 if EOF%	type -- 1 = spike; 4 = external event.%	channel -- spike channel or event number (257 strobe; 258 start; 259 stop)%	unit -- unit number for spikes, or dataword for strobed events.%if nargin < 2	error('Missing filespec or header');endif fid == -1	error('Invalid file');end% read file headerfreq = header(35);  % frequencyndsp = header(36);  % number of dsp channelsnevents = header(37); % number of external eventsnslow = header(38);  % number of slow channelsnpw = header(39);  % number of points in wavenpr = header(40);  % number of points before thresholdtimestamp = -1;% read the datawhile feof(fid) == 0	type = fread(fid, 1, 'int16');	upperbyte = fread(fid, 1, 'int16');	ts = fread(fid, 1, 'int32');	channel = fread(fid, 1, 'int16');	unit = fread(fid, 1, 'int16');	nwf = fread(fid, 1, 'int16');	nwords = fread(fid, 1, 'int16');	toread = nwords;	if toread > 0	  wf = fread(fid, toread, 'int16');	end   	if type == 4 | type == 1		timestamp = ts ./ freq;		return   	endend