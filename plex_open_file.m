function [fid, header, fname, pathname] = plex_open_file(filename)% function [fid, header, fname, pathname] = plex_open_file(filename)%% opens plexon file <filename> or prompts for a .plx file.% reads header, adds ad frequency to the end of the header -- header(65) -- this is used get extracting LFPs.%% rmm 03/27/2011%if nargin < 1 | isempty(filename)	[fname, pathname] = uigetfile('*.plx', 'Select a plx file');	if ~ischar(fname)		fid = -1;		header = [];		fname = [];		pathname = [];		return	end	filename = strcat(pathname, fname);else	fname = filename;	pathname = [];endfid = fopen(filename, 'r', 'ieee-le');if(fid == -1)	error('cannot open file');end% read file headerheader = fread(fid, 64, 'int32');freq = header(35);  % frequencyndsp = header(36);  % number of dsp channelsnevents = header(37); % number of external eventsnslow = header(38);  % number of slow channelsnpw = header(39);  % number of points in wavenpr = header(40);  % number of points before thresholdtscounts = fread(fid, [5, 130], 'int32');wfcounts = fread(fid, [5, 130], 'int32');evcounts = fread(fid, [1, 512], 'int32');save_here = ftell(fid);% skip DSP and Event headersfseek(fid, 1020*ndsp + 296*nevents, 'cof'); % read one A/D header and get the frequencyadheader = fread(fid, 74, 'int32');fseek(fid, save_here, 'bof');% skip variable headers fseek(fid, 1020*ndsp + 296*nevents + 296*nslow, 'cof');if ~isempty(adheader)    % tack A/D rate on to std header    header(65,1) = adheader(10);else    header(65,1) = 0;end